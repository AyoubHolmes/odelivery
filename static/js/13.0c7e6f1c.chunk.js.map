{"version":3,"sources":["Components/ClientBoard/Title.js","Components/Tables/Tables.js","Components/Inputs/BootstrapInput.js","Containers/Client/Shipments/AddShipment.js","Containers/Client/Shipments/EditShipment.js","Containers/Client/Shipments/All.js"],"names":["Title","props","component","variant","color","gutterBottom","children","withRouter","clientContext","useContext","ClientContext","useEffect","console","log","rows","Fragment","title","size","header","map","id","key","actions","row","Object","keys","filter","val","value","productRowActions","onClick","editProductHandler","className","window","confirm","firebase","deleteProduct","then","deleteShipmentByProductID","fetchData","deleteProductHandler","shipmentRowActions","status","editShipmentHandler","deleteShipment","shipmentID","ticketsWaitingForPickup","data","tickets","find","ticket","shipments","ship","editTicket","deleteShipmentHandler","ticketRowActions","openTicketHandler","uuid","BootstrapInput","withStyles","theme","root","marginTop","spacing","input","borderRadius","position","backgroundColor","palette","background","paper","border","fontSize","padding","transition","transitions","create","fontFamily","join","borderColor","boxShadow","InputBase","useStyles","makeStyles","margin","buttonStyle","CustomizedSelects","classes","onSubmit","event","preventDefault","onChange","filterVar","filterBy","aria-label","conditions","cond","index","label","type","AddShipment","initialValues","name","adress","phoneNumber","city","clientID","auth","currentUser","uid","price","productID","productTitle","quantity","note","useState","setValue","newProduct","setNewProduct","useTheme","fullScreen","useMediaQuery","breakpoints","down","Dialog","open","openAdd","onClose","handleCloseAdd","aria-labelledby","DialogTitle","DialogContent","TextField","autoFocus","e","target","fullWidth","FormControl","InputLabel","htmlFor","Select","native","prod","products","Input","initialQuantity","unitPrice","DialogActions","Button","addShipment","res","length","push","addTicket","EditShipment","document","shipmentToEdit","openEdit","handleCloseEdit","editShipment","shipmentId","container","paddingTop","paddingBottom","display","overflow","flexDirection","fixedHeight","height","fixedHeight2","createData","product","address","dataValues","setDataValues","setFilterBy","setFilterVar","setOpenAdd","setOpenEdit","setShipmentToEdit","filterButtonHandler","rgx","RegExp","tmp0","shipment","match","tmp","indexOf","Grid","item","xs","style","float","Typography","Paper","Tables"],"mappings":"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","file":"static/js/13.0c7e6f1c.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport Typography from '@material-ui/core/Typography';\n\nexport default function Title(props) {\n  return (\n    <Typography component=\"h1\" variant=\"h6\" color=\"primary\" gutterBottom>\n      {props.children}\n    </Typography>\n  );\n}\n\nTitle.propTypes = {\n  children: PropTypes.node,\n};\n","import React, { useEffect, useContext } from 'react';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Title from '../ClientBoard/Title';\nimport CreateIcon from '@material-ui/icons/Create';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport PictureAsPdfIcon from '@material-ui/icons/PictureAsPdf';\nimport { withRouter } from 'react-router-dom';\nimport firebase from '../../firebase';\nimport ClientContext from '../../context/client-context';\n\nconst Tables = (props) => {\n    const clientContext = useContext(ClientContext);\n    const deleteProductHandler = (id) => {\n        if (window.confirm(\"Are you sure?\"))\n            firebase.deleteProduct(id).then(() => {\n                firebase.deleteShipmentByProductID(id);\n                clientContext.fetchData();\n            }) \n    }\n    const deleteShipmentHandler = (row) => {\n        if (window.confirm(\"Are you sure?\"))\n            firebase.deleteShipment(row.shipmentID).then(clientContext.fetchData).then (() => {\n                if (row.status === \"Prés\") {\n                    const ticketsWaitingForPickup = clientContext.data.tickets.find(ticket => ticket.status === \"Prés\")\n                    ticketsWaitingForPickup.shipments = ticketsWaitingForPickup.shipments.filter(ship => ship !== row.shipmentID);\n                    firebase.editTicket(ticketsWaitingForPickup, ticketsWaitingForPickup.id)\n                }\n            });\n    }\n    useEffect(() => {\n        console.log(props.rows)\n    }, [props.rows])\n    return (\n    <React.Fragment>\n        <Title>{props.title}</Title>\n        <Table size=\"small\">\n            <TableHead>\n                <TableRow>\n                   {props.header.map((header, id) => (\n                       <TableCell key={id}>{header}</TableCell>\n                   ))}\n                   {props.actions ?(\n                            <TableCell>\n                                actions\n                            </TableCell>\n                         ) : null}\n                </TableRow>\n            </TableHead>\n            <TableBody>\n                {props.rows.map((row, id) => (\n                    <TableRow key={id}>\n                        {Object.keys(row).filter(val => (val !== 'productID' && val !== 'shipmentID')).map((value, id) => {\n                            return (\n                                <TableCell key={id}>{row[value]}</TableCell>\n                            )\n                        })}\n                        {props.productRowActions ?(\n                            <TableCell>\n                                <button onClick={()=>props.editProductHandler({...row})} className=\"btn text-primary\">\n                                    <CreateIcon />\n                                </button>\n                                <button \n                                    onClick={() => deleteProductHandler(id)}\n                                    className=\"btn text-danger\">\n                                    <DeleteIcon />\n                                </button>\n                            </TableCell>\n                         ) : null}\n                         {\n                             props.shipmentRowActions && row.status === \"Prés\" ? (\n                                <TableCell>\n                                    <button onClick={()=>props.editShipmentHandler({...row})} className=\"btn text-primary\">\n                                        <CreateIcon />\n                                    </button>\n                                    <button \n                                        onClick={() => deleteShipmentHandler(row)}\n                                        className=\"btn text-danger\">\n                                        <DeleteIcon />\n                                    </button>\n                                </TableCell>\n                             ) : null\n                         }\n                         {\n                             props.ticketRowActions ? (\n                                <TableCell>\n                                    <button onClick={()=>props.openTicketHandler(row.uuid)} className=\"btn text-danger\">\n                                        <PictureAsPdfIcon />\n                                    </button>\n                                </TableCell>\n                             ) : null\n                         }\n                    </TableRow>\n                ))}\n            </TableBody>\n        </Table>\n    </React.Fragment>\n    );\n};\n\nexport default withRouter(Tables);\n\n/*\n\n<TableCell>Date</TableCell>\n                <TableCell>Name</TableCell>\n                <TableCell>Ship To</TableCell>\n                <TableCell>Payment Method</TableCell>\n                <TableCell align=\"right\">Sale Amount</TableCell>\n                <TableCell>Ship To</TableCell>\n                <TableCell>Payment Method</TableCell>\n                <TableCell align=\"right\">Sale Amount</TableCell>\n            \n<TableCell>{row.date}</TableCell>\n                <TableCell>{row.name}</TableCell>\n                <TableCell>{row.shipTo}</TableCell>\n                <TableCell>{row.paymentMethod}</TableCell>\n                <TableCell align=\"right\">{row.amount}</TableCell>\n                <TableCell>{row.shipTo}</TableCell>\n                <TableCell>{row.paymentMethod}</TableCell>\n                <TableCell align=\"right\">{row.amount}</TableCell>\n                */","import React from 'react';\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\n//import InputLabel from '@material-ui/core/InputLabel';\n//import MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\n//import Select from '@material-ui/core/Select';\nimport NativeSelect from '@material-ui/core/NativeSelect';\nimport InputBase from '@material-ui/core/InputBase';\nimport Button from '@material-ui/core/Button';\n\n\nconst BootstrapInput = withStyles((theme) => ({\n  root: {\n    'label + &': {\n      marginTop: theme.spacing(3),\n    },\n  },\n  input: {\n    borderRadius: 4,\n    position: 'relative',\n    backgroundColor: theme.palette.background.paper,\n    border: '1px solid #ced4da',\n    fontSize: 16,\n    padding: '10px 26px 10px 12px',\n    transition: theme.transitions.create(['border-color', 'box-shadow']),\n    // Use the system font instead of the default Roboto font.\n    fontFamily: [\n      '-apple-system',\n      'BlinkMacSystemFont',\n      '\"Segoe UI\"',\n      'Roboto',\n      '\"Helvetica Neue\"',\n      'Arial',\n      'sans-serif',\n      '\"Apple Color Emoji\"',\n      '\"Segoe UI Emoji\"',\n      '\"Segoe UI Symbol\"',\n    ].join(','),\n    '&:focus': {\n      borderRadius: 4,\n      borderColor: '#80bdff',\n      boxShadow: '0 0 0 0.2rem rgba(0,123,255,.25)',\n    },\n  },\n}))(InputBase);\n\nconst useStyles = makeStyles((theme) => ({\n  margin: {\n    margin: theme.spacing(1),\n  },\n  buttonStyle: {\n    margin: theme.spacing(1),\n    borderRadius: 4,\n    position: 'relative',\n    fontSize: 12,\n  }\n}));\n\nexport default function CustomizedSelects(props) {\n  const classes = useStyles();\n  return (\n    <form onSubmit={(event) => {event.preventDefault()}}>\n      <FormControl className={classes.margin}>\n        <BootstrapInput id=\"demo-customized-textbox\" onChange={props.filterVar} />\n      </FormControl>\n      <FormControl className={classes.margin}>\n        <NativeSelect\n          id=\"demo-customized-select-native\"\n          onChange={props.filterBy}\n          input={<BootstrapInput />}\n        >\n          <option aria-label=\"None\" value=\"\">Tous</option>\n          {props.conditions.map((cond, index) => {\n            return (<option key={index} value={cond.value}>{cond.label}</option>);\n          })}\n        </NativeSelect>\n      </FormControl>\n      <Button type=\"submit\" className={classes.buttonStyle} variant=\"contained\" color=\"primary\" onClick={props.filter}>\n            <i className=\"fas fa-filter\"></i> {' '}Filtre\n        </Button>\n    </form>\n  );\n}\n","import React, { useState, useContext } from 'react';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport { useTheme } from '@material-ui/core/styles';\nimport Input from '@material-ui/core/Input';\nimport ClientContext from '../../../context/client-context';\nimport firebase from '../../../firebase';\nimport uuid from 'react-uuid';\n\n\nconst AddShipment = (props) => {\n    const clientContext = useContext(ClientContext);\n    const initialValues = {\n      name: '',\n      adress: '',\n      phoneNumber: '',\n      city: '',\n      clientID: firebase.auth.currentUser.uid,\n      price: 0,\n      productID: '',\n      productTitle: '',\n      quantity: 0,\n      status: 'Prés',\n      note: ''\n  }\n\n  let cities = [\"Casablanca\", \"Mohammedia\", \"Rabat\" ,\"Agadir\", \"Marrakech\"];\n    const [value, setValue] = useState(initialValues);\n    const [newProduct, setNewProduct] = useState(false);\n    const theme = useTheme();\n    const fullScreen = useMediaQuery(theme.breakpoints.down('sm'));\n    const addShipment = () => {\n      firebase.addShipment(value).then((res) => {\n          clientContext.fetchData();\n          if (value.status === \"Prés\")\n          {\n              const ticketsWaitingForPickup = clientContext.data.tickets.find(ticket => ticket.status === \"Prés\" && ticket.shipments.length <= 9)\n              console.log(ticketsWaitingForPickup);\n              if (ticketsWaitingForPickup)\n              {\n                  ticketsWaitingForPickup.shipments.push(res)\n                  firebase.editTicket(ticketsWaitingForPickup, ticketsWaitingForPickup.id)\n              }\n              else {\n                  firebase.addTicket({\n                      uuid: uuid(),\n                      status: \"Prés\",\n                      shipments: [res],\n                  })\n              }\n          }\n          props.handleCloseAdd();\n      }\n  )}\n\n  const addProductbyId = (e) => {\n    if (e.target.value !== 'newProd')\n    {\n      setNewProduct(false);\n      if (e.target.value !== '') \n      {\n        console.log(e.target.value);\n        const prod = clientContext.data.products.find(prod => prod.id === e.target.value);\n        console.log(prod);\n        setValue({...value, productID: e.target.value, productTitle: prod.title})\n      }\n    }\n    else\n      setNewProduct(true);\n  }\n\n  return clientContext.data ? (\n    <div>\n      <Dialog fullScreen={fullScreen} open={props.openAdd} onClose={props.handleCloseAdd} aria-labelledby=\"form-dialog-title\">\n        <DialogTitle id=\"form-dialog-title\">Ajouter un colis</DialogTitle>\n        <DialogContent>\n          <TextField\n              autoFocus\n              margin=\"dense\"\n              id=\"name\"\n              label=\"Nom\"\n              type=\"text\"\n              onChange={e => setValue({...value, name: e.target.value})}\n              fullWidth\n            />\n          <FormControl>\n              <InputLabel htmlFor=\"Produit\">Produit</InputLabel>\n              <Select\n                native\n                onChange={addProductbyId}\n                input={<Input id=\"Produit\" />}\n              >\n                <option aria-label=\"None\" value=\"\" /> \n                <option value={'newProd'}>Un nouveau produit</option>\n                {\n                  clientContext.data.products.map((prod, index) => <option key={index} value={prod.id}>{prod.title}</option>)\n                }\n              </Select>\n            </FormControl>\n            {newProduct ? (\n              <>\n                <TextField\n                autoFocus\n                margin=\"dense\"\n                id=\"titre\"\n                label=\"Titre\"\n                type=\"text\"\n                onChange={e => setValue({...value, title: e.target.value})}\n                fullWidth\n              />\n              <TextField\n                autoFocus\n                margin=\"dense\"\n                id=\"initialQuantity\"\n                label=\"Quantité Initial\"\n                type=\"number\"\n                onChange={e => setValue({...value, initialQuantity: +e.target.value})}\n                fullWidth\n              />\n              <TextField\n                autoFocus\n                margin=\"dense\"\n                id=\"unitPrice\"\n                label=\"Prix\"\n                type=\"number\"\n                onChange={e => setValue({...value, unitPrice: +e.target.value})}\n                fullWidth\n              />\n            </>\n            ): null}\n          <TextField\n            autoFocus\n            value={value.quantity}\n            margin=\"dense\"\n            id=\"quantity\"\n            label=\"Quantité\"\n            type=\"number\"\n            onChange={e => setValue({\n              ...value,\n              quantity: +e.target.value,\n              price: value.productID !== '' ? +(clientContext.data.products.find(prod => prod.id ===value.productID).unitPrice) * e.target.value : 0})}\n            fullWidth\n          />\n          <TextField\n            autoFocus\n            value={value.productID !== '' ? value.price : null}\n            margin=\"dense\"\n            id=\"price\"\n            label=\"Prix\"\n            type=\"number\"\n            onChange={e => setValue({...value, price: +e.target.value})}\n            fullWidth\n          />\n          <FormControl>\n              <InputLabel htmlFor=\"Ville\">Ville</InputLabel>\n              <Select\n                native\n                value={value.city}\n                onChange={(e) => setValue({...value, city: e.target.value})}\n                input={<Input id=\"Ville\" />}\n              >\n                <option aria-label=\"None\" value=\"\" />\n                {\n                  cities.map((city, index) => <option key={index} value={city}>{city}</option>)\n                }\n              </Select>\n          </FormControl>\n          <TextField\n            autoFocus\n            margin=\"dense\"\n            id=\"adress\"\n            label=\"Adresse\"\n            type=\"text\"\n            onChange={e => setValue({...value, adress: e.target.value})}\n            fullWidth\n          />\n          <TextField\n            autoFocus\n            margin=\"dense\"\n            id=\"phoneNumber\"\n            label=\"Telephone\"\n            type=\"text\"\n            onChange={e => setValue({...value, phoneNumber: e.target.value})}\n            fullWidth\n          />\n          <TextField\n            autoFocus\n            margin=\"dense\"\n            id=\"note\"\n            label=\"Remarque\"\n            type=\"text\"\n            onChange={e => setValue({...value, note: e.target.value})}\n            fullWidth\n          />\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={props.handleCloseAdd} color=\"primary\">\n            Annuler\n          </Button>\n          <Button onClick={addShipment} color=\"primary\">\n            Ajouter\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  ): null;\n}\n\nexport default AddShipment;","import React, { useState, useEffect, useContext } from 'react';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport { useTheme } from '@material-ui/core/styles';\nimport Input from '@material-ui/core/Input';\nimport ClientContext from '../../../context/client-context';\nimport firebase from '../../../firebase';\nimport uuid from 'react-uuid';\n\n\nconst EditShipment = (props) => {\n  const clientContext = useContext(ClientContext);\n  let cities = [\"Casablanca\", \"Mohammedia\", \"Rabat\" ,\"Agadir\", \"Marrakech\"];\n  const [value, setValue] = useState({});\n  const [newProduct, setNewProduct] = useState(false);\n  useEffect(() => {\n      document.title = \"Ajout de Produit\";\n      console.log(props.shipmentToEdit);\n      setValue({...props.shipmentToEdit})\n  }, [props.shipmentToEdit])\n  const theme = useTheme();\n  const fullScreen = useMediaQuery(theme.breakpoints.down('sm'));\n  const editShipment = () => {        \n    firebase.editShipment(value, value.shipmentID).then(clientContext.fetchData).then(() => {\n        if (value.status === \"Prés\")\n        {\n            const ticketsWaitingForPickup = clientContext.data.tickets.find(ticket => ticket.status === \"Waiting For Pickup\")\n            const shipmentId = value.shipmentID;\n            console.log(shipmentId);\n            if (ticketsWaitingForPickup)\n            {\n                ticketsWaitingForPickup.shipments.push(shipmentId)\n                console.log(ticketsWaitingForPickup.shipments);\n                firebase.editTicket(ticketsWaitingForPickup, ticketsWaitingForPickup.id)\n            }\n            else {\n                firebase.addTicket({\n                    uuid: uuid(),\n                    status: \"Prés\",\n                    shipments: [shipmentId],\n                })\n            }\n        }\n        props.handleCloseEdit();\n    })\n}\n\n  const addProductbyId = (e) => {\n    if (e.target.value !== 'newProd')\n    {\n      setNewProduct(false);\n      if (e.target.value !== '') \n      {\n        const prod = clientContext.data.products.find(prod => prod.id === e.target.value);\n        setValue({...value, productID: e.target.value, productTitle: prod ? prod.title : ''})\n      }\n    }\n    else\n      setNewProduct(true);\n  }\n\n  return clientContext.data ? (\n    <>\n      <Dialog fullScreen={fullScreen} open={props.openEdit} onClose={props.handleCloseEdit} aria-labelledby=\"form-dialog-title\">\n        <DialogTitle id=\"form-dialog-title\">Modifier le colis</DialogTitle>\n        <DialogContent>\n          <TextField\n            value={value.name}\n            autoFocus\n            margin=\"dense\"\n            id=\"name\"\n            label=\"Nom\"\n            type=\"text\"\n            onChange={e => setValue({...value, name: e.target.value})}\n            fullWidth\n            />\n          <FormControl>\n              <InputLabel htmlFor=\"Produit\">Produit</InputLabel>\n              <Select\n                native\n                value={value.productID}\n                onChange={addProductbyId}\n                input={<Input id=\"Produit\" />}\n              >\n                <option aria-label=\"None\" value=\"\" />\n                <option value={'newProd'}>Un nouveau produit</option>\n                {\n                  clientContext.data.products.map((prod, index) => <option key={index} value={prod.id}>{prod.title}</option>)\n                }\n              </Select>\n            </FormControl>\n            {newProduct ? (\n              <>\n                <TextField\n                  value={value.title}\n                  autoFocus\n                  margin=\"dense\"\n                  id=\"titre\"\n                  label=\"Titre\"\n                  type=\"text\"\n                  onChange={e => setValue({...value, title: e.target.value})}\n                  fullWidth\n              />\n              <TextField\n                value={value.initialQuantity}\n                autoFocus\n                margin=\"dense\"\n                id=\"initialQuantity\"\n                label=\"Quantité Initial\"\n                type=\"number\"\n                onChange={e => setValue({...value, initialQuantity: +e.target.value})}\n                fullWidth\n              />\n              <TextField\n                value={value.unitPrice}\n                autoFocus\n                margin=\"dense\"\n                id=\"unitPrice\"\n                label=\"Prix\"\n                type=\"number\"\n                onChange={e => setValue({...value, unitPrice: +e.target.value})}\n                fullWidth\n              />\n            </>\n            ): null}\n          <TextField\n            value={value.quantity}\n            autoFocus\n            margin=\"dense\"\n            id=\"quantity\"\n            label=\"Quantité\"\n            type=\"number\"\n            onChange={e => setValue({\n              ...value,\n              quantity: +e.target.value,\n              price: value.productID !== '' ? +(clientContext.data.products.find(prod => prod.id ===value.productID).unitPrice) * e.target.value : 0})}\n            fullWidth\n          />\n          <TextField\n            autoFocus\n            value={value.productID !== '' ? value.price : null}\n            margin=\"dense\"\n            id=\"price\"\n            label=\"Prix\"\n            type=\"number\"\n            onChange={e => setValue({...value, price: +e.target.value})}\n            fullWidth\n          />\n          <FormControl>\n              <InputLabel htmlFor=\"Ville\">Ville</InputLabel>\n              <Select\n                native\n                value={value.city}\n                onChange={(e) => setValue({...value, city: e.target.value})}\n                input={<Input id=\"Ville\" />}\n              >\n                <option aria-label=\"None\" value=\"\" />\n                {\n                  cities.map((city, index) => <option key={index} value={city}>{city}</option>)\n                }\n              </Select>\n          </FormControl>\n          <TextField\n            value={value.adress}\n            autoFocus\n            margin=\"dense\"\n            id=\"adress\"\n            label=\"Adresse\"\n            type=\"text\"\n            onChange={e => setValue({...value, adress: e.target.value})}\n            fullWidth\n          />\n          <TextField\n            autoFocus\n            value={value.phoneNumber}\n            margin=\"dense\"\n            id=\"phoneNumber\"\n            label=\"Telephone\"\n            type=\"text\"\n            onChange={e => setValue({...value, phoneNumber: e.target.value})}\n            fullWidth\n          />\n          <TextField\n            autoFocus\n            value={value.note}\n            margin=\"dense\"\n            id=\"note\"\n            label=\"Remarque\"\n            type=\"text\"\n            onChange={e => setValue({...value, note: e.target.value})}\n            fullWidth\n          />\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={props.handleCloseEdit} color=\"primary\">\n            Annuler\n          </Button>\n          <Button onClick={editShipment} color=\"primary\">\n            Ajouter\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </>\n  ): null;\n}\n\nexport default EditShipment;","/* eslint-disable no-unused-vars */\nimport React, { useContext, useEffect, useState } from 'react';\nimport './All.css';\nimport { withRouter } from 'react-router-dom';\nimport { makeStyles } from '@material-ui/core/styles';\nimport ClientContext from '../../../context/client-context';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport Tables from '../../../Components/Tables/Tables';\nimport Typography from '@material-ui/core/Typography';\nimport AddIcon from '@material-ui/icons/Add';\nimport InputTest from '../../../Components/Inputs/BootstrapInput'\nimport IconButton from '@material-ui/core/Button';\nimport AddShipment from './AddShipment';\nimport EditShipment from './EditShipment';\n\nconst useStyles = makeStyles((theme) => ({\n    container: {\n      paddingTop: theme.spacing(4),\n      paddingBottom: theme.spacing(4),\n    },\n    paper: {\n      padding: theme.spacing(2),\n      display: 'flex',\n      overflow: 'auto',\n      flexDirection: 'column',\n    },\n    fixedHeight: {\n      height: 290,\n    },\n    fixedHeight2: {\n      height: 140,\n    },\n}))\n\nconst createData = (id, product, price, quantity, name, address, city, phoneNumber, status, note, productID, shipmentID) => {\n    return { id, product, price, quantity, name, address, city, phoneNumber, status, note, productID, shipmentID  };\n  }\n\n\nconst All = (props) => {\n\n    const clientContext = useContext(ClientContext);\n\n    const conditions = [\n        {value: 'id', label: 'ID'},\n        {value: 'productTitle', label: 'Produit'},\n        {value: 'price', label: 'Prix'},\n        {value: 'quantity', label: 'Quantité'},\n        {value: 'name', label: 'Nom'},\n        {value: 'adress', label: 'Adresse'},\n        {value: 'city', label: 'Ville'},\n        {value: 'phoneNumber', label: 'Telephone'},\n        {value: 'status', label: 'Status'},\n    ]\n    const dataHeader = ['ID', 'Produit', 'Prix', 'Quantité', 'Nom', 'Adresse', 'Ville', 'Telephone', 'Status', 'Remarque'];\n    const [dataValues, setDataValues] = useState([]);\n    const [filterBy, setFilterBy] = useState(\"\");\n    const [filterVar, setFilterVar] = useState(\"\");\n    const [openAdd, setOpenAdd] = useState(false);\n    const [openEdit, setOpenEdit] = useState(false);\n    const [shipmentToEdit, setShipmentToEdit] = useState({});\n\n    const handleClickOpenAdd = () => {\n        setOpenAdd(true);\n      };\n    \n    const handleCloseAdd = () => {\n        setOpenAdd(false);\n    };\n    \n    const handleCloseEdit = () => {\n        setOpenEdit(false);\n    };\n\n    const filterByHandler = (filter) => {\n        setFilterBy(filter.target.value);\n    }\n    const filterVarHandler = (filter) => {\n        setFilterVar(filter.target.value);\n    }\n\n    const filterButtonHandler = () => {\n        if (clientContext) {\n            if (filterBy !== \"\")\n            {\n                const rgx =new RegExp(filterVar)\n                let tmp0 = [];\n                if (filterBy !== \"id\") {\n                        tmp0 = clientContext.data.shipments.filter((shipment) => (\"\" + shipment[filterBy]).match(rgx))\n                    }\n                else if (+filterVar < clientContext.data.shipments.length) {\n                    tmp0 = [clientContext.data.shipments[+filterVar]];\n                }\n                const tmp = tmp0.map((shipment) => {  \n                    return createData(clientContext.data.shipments.indexOf(shipment), shipment.productTitle, shipment.price, shipment.quantity, shipment.name, shipment.adress, shipment.city, shipment.phoneNumber, shipment.status, shipment.note, shipment.productID, shipment.id);\n                })\n                setDataValues(tmp);\n            }\n            else {\n                const tmp = clientContext.data.shipments ? clientContext.data.shipments.map((shipment, index) => {  \n                    return createData(clientContext.data.shipments.indexOf(shipment), shipment.productTitle, shipment.price, shipment.quantity, shipment.name, shipment.adress, shipment.city, shipment.phoneNumber, shipment.status, shipment.note, shipment.productID, shipment.id);\n                }) : [];\n                console.log(tmp);\n                setDataValues(tmp);\n            }\n        }\n    }\n\n    useEffect(() => {\n        document.title= \"Colis | Odelivery\";\n        filterButtonHandler();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [clientContext.data.shipments]);\n\n    const classes = useStyles();\n    const editShipmentHandler = (shipment) => {\n        console.log(shipment);\n        setShipmentToEdit(shipment);\n        setOpenEdit(true);\n    }\n    return clientContext ? (\n        <> \n            <Grid item xs={12}>\n                <div style={{float: 'left'}}>\n                    <Typography component=\"h1\" variant=\"h4\" color=\"primary\" gutterBottom>\n                        Colis\n                        <IconButton\n                            color=\"primary\"\n                            aria-label=\"Add Shipment\"\n                            onClick={handleClickOpenAdd}\n                            component=\"span\">\n                                <AddIcon/>\n                        </IconButton>\n                    </Typography>\n                    \n                </div>\n            </Grid>\n            <Grid item xs={12}>\n                <div style={{float: 'left'}}>\n                    <InputTest\n                        filterBy={filterByHandler}\n                        filterVar={filterVarHandler}\n                        filter={filterButtonHandler}\n                        conditions={conditions}\n                    />\n                </div>\n            </Grid>\n            <Grid item xs={12}>\n                    <Paper className={classes.paper}>\n                        <Tables header={dataHeader} rows={dataValues} actions={true} shipmentRowActions={true} editShipmentHandler={editShipmentHandler}/>\n                    </Paper>\n            </Grid>\n            <AddShipment handleCloseAdd={handleCloseAdd} openAdd={openAdd}/>\n            <EditShipment handleCloseEdit={handleCloseEdit} openEdit={openEdit} shipmentToEdit={shipmentToEdit}/>\n        </>\n    ) : null;\n};\n\nexport default  withRouter(All);"],"sourceRoot":""}