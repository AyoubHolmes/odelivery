{"version":3,"sources":["Components/ClientBoard/Title.js","Components/Tables/Tables.js","Components/Inputs/BootstrapInput.js","Containers/Client/Products/AddProduct.js","Containers/Client/Products/EditProduct.js","Containers/Client/Products/All.js"],"names":["Title","props","component","variant","color","gutterBottom","children","withRouter","clientContext","useContext","ClientContext","useEffect","console","log","rows","Fragment","title","size","header","map","id","key","actions","row","Object","keys","filter","val","value","productRowActions","onClick","editProductHandler","className","window","confirm","firebase","deleteProduct","then","deleteShipmentByProductID","fetchData","deleteProductHandler","shipmentRowActions","status","editShipmentHandler","deleteShipment","shipmentID","ticketsWaitingForPickup","data","tickets","find","ticket","shipments","ship","editTicket","deleteShipmentHandler","ticketRowActions","openTicketHandler","uuid","BootstrapInput","withStyles","theme","root","marginTop","spacing","input","borderRadius","position","backgroundColor","palette","background","paper","border","fontSize","padding","transition","transitions","create","fontFamily","join","borderColor","boxShadow","InputBase","useStyles","makeStyles","margin","buttonStyle","CustomizedSelects","classes","onSubmit","event","preventDefault","onChange","filterVar","filterBy","aria-label","conditions","cond","index","label","type","AddProduct","useState","unitPrice","initialQuantity","sold","setValue","document","useTheme","fullScreen","useMediaQuery","breakpoints","down","Dialog","open","openAdd","onClose","handleCloseAdd","aria-labelledby","DialogTitle","DialogContent","TextField","autoFocus","e","target","fullWidth","DialogActions","Button","addProduct","EditProduct","productToEdit","openEdit","handleCloseEdit","editProduct","productID","container","paddingTop","paddingBottom","display","overflow","flexDirection","fixedHeight","height","fixedHeight2","createData","left","dataValues","setDataValues","setFilterBy","setFilterVar","setOpenAdd","setOpenEdit","setProductToEdit","filterButtonHandler","products","rgx","RegExp","tmp0","product","match","length","tmp","shipmentsByProduct","shipment","r","i","quantity","test","indexOf","t","Grid","item","xs","style","float","Typography","addFunc","history","push","url","Paper","Tables"],"mappings":"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","file":"static/js/12.ca8b67c8.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport Typography from '@material-ui/core/Typography';\n\nexport default function Title(props) {\n  return (\n    <Typography component=\"h1\" variant=\"h6\" color=\"primary\" gutterBottom>\n      {props.children}\n    </Typography>\n  );\n}\n\nTitle.propTypes = {\n  children: PropTypes.node,\n};\n","import React, { useEffect, useContext } from 'react';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Title from '../ClientBoard/Title';\nimport CreateIcon from '@material-ui/icons/Create';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport PictureAsPdfIcon from '@material-ui/icons/PictureAsPdf';\nimport { withRouter } from 'react-router-dom';\nimport firebase from '../../firebase';\nimport ClientContext from '../../context/client-context';\n\nconst Tables = (props) => {\n    const clientContext = useContext(ClientContext);\n    const deleteProductHandler = (id) => {\n        if (window.confirm(\"Are you sure?\"))\n            firebase.deleteProduct(id).then(() => {\n                firebase.deleteShipmentByProductID(id);\n                clientContext.fetchData();\n            }) \n    }\n    const deleteShipmentHandler = (row) => {\n        if (window.confirm(\"Are you sure?\"))\n            firebase.deleteShipment(row.shipmentID).then(clientContext.fetchData).then (() => {\n                if (row.status === \"Prés\") {\n                    const ticketsWaitingForPickup = clientContext.data.tickets.find(ticket => ticket.status === \"Prés\")\n                    ticketsWaitingForPickup.shipments = ticketsWaitingForPickup.shipments.filter(ship => ship !== row.shipmentID);\n                    firebase.editTicket(ticketsWaitingForPickup, ticketsWaitingForPickup.id)\n                }\n            });\n    }\n    useEffect(() => {\n        console.log(props.rows)\n    }, [props.rows])\n    return (\n    <React.Fragment>\n        <Title>{props.title}</Title>\n        <Table size=\"small\">\n            <TableHead>\n                <TableRow>\n                   {props.header.map((header, id) => (\n                       <TableCell key={id}>{header}</TableCell>\n                   ))}\n                   {props.actions ?(\n                            <TableCell>\n                                actions\n                            </TableCell>\n                         ) : null}\n                </TableRow>\n            </TableHead>\n            <TableBody>\n                {props.rows.map((row, id) => (\n                    <TableRow key={id}>\n                        {Object.keys(row).filter(val => (val !== 'productID' && val !== 'shipmentID')).map((value, id) => {\n                            return (\n                                <TableCell key={id}>{row[value]}</TableCell>\n                            )\n                        })}\n                        {props.productRowActions ?(\n                            <TableCell>\n                                <button onClick={()=>props.editProductHandler({...row})} className=\"btn text-primary\">\n                                    <CreateIcon />\n                                </button>\n                                <button \n                                    onClick={() => deleteProductHandler(id)}\n                                    className=\"btn text-danger\">\n                                    <DeleteIcon />\n                                </button>\n                            </TableCell>\n                         ) : null}\n                         {\n                             props.shipmentRowActions && row.status === \"Prés\" ? (\n                                <TableCell>\n                                    <button onClick={()=>props.editShipmentHandler({...row})} className=\"btn text-primary\">\n                                        <CreateIcon />\n                                    </button>\n                                    <button \n                                        onClick={() => deleteShipmentHandler(row)}\n                                        className=\"btn text-danger\">\n                                        <DeleteIcon />\n                                    </button>\n                                </TableCell>\n                             ) : null\n                         }\n                         {\n                             props.ticketRowActions ? (\n                                <TableCell>\n                                    <button onClick={()=>props.openTicketHandler(row.uuid)} className=\"btn text-danger\">\n                                        <PictureAsPdfIcon />\n                                    </button>\n                                </TableCell>\n                             ) : null\n                         }\n                    </TableRow>\n                ))}\n            </TableBody>\n        </Table>\n    </React.Fragment>\n    );\n};\n\nexport default withRouter(Tables);\n\n/*\n\n<TableCell>Date</TableCell>\n                <TableCell>Name</TableCell>\n                <TableCell>Ship To</TableCell>\n                <TableCell>Payment Method</TableCell>\n                <TableCell align=\"right\">Sale Amount</TableCell>\n                <TableCell>Ship To</TableCell>\n                <TableCell>Payment Method</TableCell>\n                <TableCell align=\"right\">Sale Amount</TableCell>\n            \n<TableCell>{row.date}</TableCell>\n                <TableCell>{row.name}</TableCell>\n                <TableCell>{row.shipTo}</TableCell>\n                <TableCell>{row.paymentMethod}</TableCell>\n                <TableCell align=\"right\">{row.amount}</TableCell>\n                <TableCell>{row.shipTo}</TableCell>\n                <TableCell>{row.paymentMethod}</TableCell>\n                <TableCell align=\"right\">{row.amount}</TableCell>\n                */","import React from 'react';\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\n//import InputLabel from '@material-ui/core/InputLabel';\n//import MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\n//import Select from '@material-ui/core/Select';\nimport NativeSelect from '@material-ui/core/NativeSelect';\nimport InputBase from '@material-ui/core/InputBase';\nimport Button from '@material-ui/core/Button';\n\n\nconst BootstrapInput = withStyles((theme) => ({\n  root: {\n    'label + &': {\n      marginTop: theme.spacing(3),\n    },\n  },\n  input: {\n    borderRadius: 4,\n    position: 'relative',\n    backgroundColor: theme.palette.background.paper,\n    border: '1px solid #ced4da',\n    fontSize: 16,\n    padding: '10px 26px 10px 12px',\n    transition: theme.transitions.create(['border-color', 'box-shadow']),\n    // Use the system font instead of the default Roboto font.\n    fontFamily: [\n      '-apple-system',\n      'BlinkMacSystemFont',\n      '\"Segoe UI\"',\n      'Roboto',\n      '\"Helvetica Neue\"',\n      'Arial',\n      'sans-serif',\n      '\"Apple Color Emoji\"',\n      '\"Segoe UI Emoji\"',\n      '\"Segoe UI Symbol\"',\n    ].join(','),\n    '&:focus': {\n      borderRadius: 4,\n      borderColor: '#80bdff',\n      boxShadow: '0 0 0 0.2rem rgba(0,123,255,.25)',\n    },\n  },\n}))(InputBase);\n\nconst useStyles = makeStyles((theme) => ({\n  margin: {\n    margin: theme.spacing(1),\n  },\n  buttonStyle: {\n    margin: theme.spacing(1),\n    borderRadius: 4,\n    position: 'relative',\n    fontSize: 12,\n  }\n}));\n\nexport default function CustomizedSelects(props) {\n  const classes = useStyles();\n  return (\n    <form onSubmit={(event) => {event.preventDefault()}}>\n      <FormControl className={classes.margin}>\n        <BootstrapInput id=\"demo-customized-textbox\" onChange={props.filterVar} />\n      </FormControl>\n      <FormControl className={classes.margin}>\n        <NativeSelect\n          id=\"demo-customized-select-native\"\n          onChange={props.filterBy}\n          input={<BootstrapInput />}\n        >\n          <option aria-label=\"None\" value=\"\">Tous</option>\n          {props.conditions.map((cond, index) => {\n            return (<option key={index} value={cond.value}>{cond.label}</option>);\n          })}\n        </NativeSelect>\n      </FormControl>\n      <Button type=\"submit\" className={classes.buttonStyle} variant=\"contained\" color=\"primary\" onClick={props.filter}>\n            <i className=\"fas fa-filter\"></i> {' '}Filtre\n        </Button>\n    </form>\n  );\n}\n","import React, { useState, useEffect, useContext } from 'react';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport { useTheme } from '@material-ui/core/styles';\nimport ClientContext from '../../../context/client-context';\nimport firebase from '../../../firebase';\nimport uuid from 'react-uuid';\n\n\nconst AddProduct = (props) => {\n    const clientContext = useContext(ClientContext);\n    const initialValues = {\n        title: '',\n        unitPrice: 0,\n        initialQuantity: 0,\n        sold: 0,\n    }\n    const [value, setValue] = useState(initialValues);\n    useEffect(() => {\n        document.title = \"Ajout de Produit\";\n    }, [])\n    const theme = useTheme();\n    const fullScreen = useMediaQuery(theme.breakpoints.down('sm'));\n    const addProduct = () => {\n        console.log(value);\n        firebase.addProduct({...value, id: uuid()}).then(() => {\n            clientContext.fetchData();\n            props.handleCloseAdd();\n        })\n    }\n\n  return (\n    <div>\n      <Dialog fullScreen={fullScreen} open={props.openAdd} onClose={props.handleCloseAdd} aria-labelledby=\"form-dialog-title\">\n        <DialogTitle id=\"form-dialog-title\">Ajouter un produit</DialogTitle>\n        <DialogContent>\n          <TextField\n            autoFocus\n            margin=\"dense\"\n            id=\"titre\"\n            label=\"Titre\"\n            type=\"text\"\n            onChange={e => setValue({...value, title: e.target.value})}\n            fullWidth\n          />\n          <TextField\n            autoFocus\n            margin=\"dense\"\n            id=\"initialQuantity\"\n            label=\"Quantité Initial\"\n            type=\"number\"\n            onChange={e => setValue({...value, initialQuantity: +e.target.value})}\n            fullWidth\n          />\n          <TextField\n            autoFocus\n            margin=\"dense\"\n            id=\"unitPrice\"\n            label=\"Prix\"\n            type=\"number\"\n            onChange={e => setValue({...value, unitPrice: +e.target.value})}\n            fullWidth\n          />\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={props.handleCloseAdd} color=\"primary\">\n            Annuler\n          </Button>\n          <Button onClick={addProduct} color=\"primary\">\n            Ajouter\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}\n\nexport default AddProduct;","import React, { useState, useEffect, useContext } from 'react';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport { useTheme } from '@material-ui/core/styles';\nimport ClientContext from '../../../context/client-context';\nimport firebase from '../../../firebase';\n\n\n\n\n\nconst EditProduct = (props) => {\n    const clientContext = useContext(ClientContext);\n    const initialValues = {\n        title: '',\n        unitPrice: 0,\n        initialQuantity: 0,\n        sold: 0\n    }\n    const [value, setValue] = useState(initialValues);\n\n    useEffect(() => {\n        document.title = \"Ajout de Produit\";\n        console.log(props.productToEdit);\n        setValue({...props.productToEdit})\n    }, [props.productToEdit])\n\n    const theme = useTheme();\n    const fullScreen = useMediaQuery(theme.breakpoints.down('sm'));\n    const editProduct = () => {\n      console.log(props.productToEdit);\n        firebase.editProduct(value, props.productToEdit.productID).then(() => {\n            clientContext.fetchData();\n            props.handleCloseEdit();\n        })\n    }\n\n  return (\n    <div>\n      <Dialog fullScreen={fullScreen} open={props.openEdit} onClose={props.handleCloseEdit} aria-labelledby=\"form-dialog-title\">\n        <DialogTitle id=\"form-dialog-title\">Modifer le produit</DialogTitle>\n        <DialogContent>\n          <TextField\n            value={value.title}\n            autoFocus\n            margin=\"dense\"\n            id=\"titre\"\n            label=\"Titre\"\n            type=\"text\"\n            onChange={e => setValue({...value, title: e.target.value})}\n            fullWidth\n          />\n          <TextField\n            value={+value.initialQuantity}\n            autoFocus\n            margin=\"dense\"\n            id=\"initialQuantity\"\n            label=\"Quantité Initial\"\n            type=\"number\"\n            onChange={e => setValue({...value, initialQuantity: +e.target.value})}\n            fullWidth\n          />\n          <TextField\n            value={+value.unitPrice}\n            autoFocus\n            margin=\"dense\"\n            id=\"unitPrice\"\n            label=\"Prix\"\n            type=\"number\"\n            onChange={e => setValue({...value, unitPrice: +e.target.value})}\n            fullWidth\n          />\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={props.handleCloseEdit} color=\"primary\">\n            Annuler\n          </Button>\n          <Button onClick={editProduct} color=\"primary\">\n            Modifer\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}\n\nexport default EditProduct;","import React, { useContext, useEffect, useState } from 'react';\nimport './All.css';\nimport { withRouter } from 'react-router-dom';\nimport { makeStyles } from '@material-ui/core/styles';\nimport ClientContext from '../../../context/client-context';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport Tables from '../../../Components/Tables/Tables';\nimport Typography from '@material-ui/core/Typography';\nimport AddIcon from '@material-ui/icons/Add';\nimport InputTest from '../../../Components/Inputs/BootstrapInput'\nimport IconButton from '@material-ui/core/Button';\nimport AddProduct from './AddProduct';\nimport EditProduct from './EditProduct';\n\nconst useStyles = makeStyles((theme) => ({\n    container: {\n      paddingTop: theme.spacing(4),\n      paddingBottom: theme.spacing(4),\n    },\n    paper: {\n      padding: theme.spacing(2),\n      display: 'flex',\n      overflow: 'auto',\n      flexDirection: 'column',\n    },\n    fixedHeight: {\n      height: 290,\n    },\n    fixedHeight2: {\n      height: 140,\n    },\n}))\n\nconst createData = (id, title, unitPrice, sold, left, initialQuantity, productID) => {\n    return { id, title, unitPrice, sold, left, initialQuantity, productID };\n  }\n\n\nconst All = (props) => {\n\n    const clientContext = useContext(ClientContext);\n\n    const dataHeader = ['ID', 'Titre', 'Prix d\\'unité', 'Vendu', 'Reste', 'Quantité Initiale'];\n    const [dataValues, setDataValues] = useState([]);\n    const [filterBy, setFilterBy] = useState(\"\");\n    const [filterVar, setFilterVar] = useState(\"\");\n    const [openAdd, setOpenAdd] = useState(false);\n    const [openEdit, setOpenEdit] = useState(false);\n    const [productToEdit, setProductToEdit] = useState({});\n    \n    const conditions = [\n        {value: 'id', label: 'ID'},\n        {value: 'title', label: 'Titre'},\n        {value: 'unitPrice', label: 'Prix d\\'unité'},\n        {value: 'sold', label: 'Vendu'},\n        {value: 'left', label: 'Reste'},\n        {value: 'initialQuantity', label: 'Quantité Initiale'},\n    ]\n\n    const handleClickOpenAdd = () => {\n        setOpenAdd(true);\n      };\n    \n    const handleCloseAdd = () => {\n        setOpenAdd(false);\n    };\n    \n    const handleCloseEdit = () => {\n        setOpenEdit(false);\n    };\n\n    const filterByHandler = (filter) => {\n        setFilterBy(filter.target.value);\n    }\n    const filterVarHandler = (filter) => {\n        setFilterVar(filter.target.value);\n    }\n\n    const filterButtonHandler = () => {\n        console.log(clientContext.data.products);\n        if (filterBy !== \"\" && filterBy !== \"left\")\n        {\n            const rgx =new RegExp(filterVar)\n            let tmp0 = [];\n            if (filterBy !== \"id\") {\n                    tmp0 = clientContext.data.products.filter((product) => (\"\" + product[filterBy]).match(rgx))\n                }\n            else if (+filterVar < clientContext.data.products.length) {\n                tmp0 = [clientContext.data.products[+filterVar]];\n            }\n            const tmp = tmp0.map((product, index) => {  \n                const shipmentsByProduct = clientContext.data.shipments.filter(shipment => (shipment.status ==='Livré' \n                    || shipment.status ==='Facturé') && shipment.productID === index);\n                let r = 0;\n                for(let i = 0; i < shipmentsByProduct.length; i++) {\n                    r += shipmentsByProduct[i].quantity;\n                }\n                const test = createData(clientContext.data.products.indexOf(product), product.title, product.unitPrice, r, product.initialQuantity - r, product.initialQuantity, product.id)\n                console.log(test);\n                return test\n            })\n            setDataValues(tmp);\n        }\n        else if (filterBy === \"left\") {\n            let tmp = clientContext.data.products.map((product, index) => {  \n                const shipmentsByProduct = clientContext.data.shipments.filter(shipment => (shipment.status ==='Livré' \n                    || shipment.status ==='Facturé') && shipment.productID === index);\n                let r = 0;\n                for(let i = 0; i < shipmentsByProduct.length; i++) {\n                    r += shipmentsByProduct[i].quantity;\n                }\n                const test = createData(clientContext.data.products.indexOf(product), product.title, product.unitPrice, r, product.initialQuantity - r, product.initialQuantity, product.id)\n                console.log(test);\n                return test\n\n            })\n            tmp = tmp.filter(t => t.left === +filterVar)\n            setDataValues(tmp);\n        }\n        else {\n            const tmp = clientContext.data.products ? clientContext.data.products.map((product, index) => {  \n                const shipmentsByProduct = clientContext.data.shipments.filter(shipment => (shipment.status ==='Livré' \n                    || shipment.status ==='Facturé') && shipment.productID === product.id);\n                let r = 0;\n                console.log(shipmentsByProduct);\n                for(let i = 0; i < shipmentsByProduct.length; i++) {\n                    r += shipmentsByProduct[i].quantity;\n                }\n                const test = createData(clientContext.data.products.indexOf(product), product.title, product.unitPrice, r, product.initialQuantity - r, product.initialQuantity, product.id)\n                console.log(test);\n                return test\n            }) : [];\n            console.log(tmp);\n            setDataValues(tmp);\n        }\n    }\n\n    useEffect(() => {\n        document.title= \"Produits | Odelivery\";\n        filterButtonHandler();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [clientContext.data.products]);\n\n    const classes = useStyles();\n    const editProductHandler = (product) => {\n        console.log(product);\n        setProductToEdit({...product});\n        setOpenEdit(true);\n        console.log(\"edit test\");\n    }\n    return (\n        <> \n            <Grid item xs={12}>\n                <div style={{float: 'left'}}>\n                    <Typography component=\"h1\" variant=\"h4\" color=\"primary\" gutterBottom>\n                        Produits\n                        <IconButton\n                            color=\"primary\"\n                            aria-label=\"Add Product\"\n                            onClick={handleClickOpenAdd}\n                            component=\"span\">\n                                <AddIcon/>\n                        </IconButton>\n                    </Typography>\n                    \n                </div>\n            </Grid>\n            <Grid item xs={12}>\n                <div style={{float: 'left'}}>\n                    <InputTest\n                        addFunc={()=>props.history.push(props.match.url + '/add')}\n                        filterBy={filterByHandler}\n                        filterVar={filterVarHandler}\n                        filter={filterButtonHandler}\n                        conditions={conditions}\n                    />\n                </div>\n            </Grid>\n            <Grid item xs={12}>\n                    <Paper className={classes.paper}>\n                        <Tables header={dataHeader} rows={dataValues} actions={true} productRowActions={true} editProductHandler={editProductHandler}/>\n                    </Paper>\n            </Grid>\n            <AddProduct handleCloseAdd={handleCloseAdd} openAdd={openAdd}/>\n            <EditProduct handleCloseEdit={handleCloseEdit} openEdit={openEdit} productToEdit={productToEdit}/>\n        </>\n    );\n};\n\nexport default  withRouter(All);"],"sourceRoot":""}